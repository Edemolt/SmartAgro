const mongoose = require('mongoose');
const jwt = require('jsonwebtoken');
const bcrypt = require('bcrypt');

const userSchema = new mongoose.Schema({
    name:{
        type: String,
        required: true,
    },
    password:{
        type: String,
        required: true,
    },
    mail:{
        type: String,
        required: true,
    },
    bookings:[{
        crop:{
            type: String,
            required: false,
        },
        land:{
            type: Number,
            required: false,
        },
        yeild:{
            type: Number,
            required: false,
        },
        price:{
            type: Number,
            required: false,
        },
    }],
    tokens:[{
        token:{
            type: String,
            required: true,
        }
    }]
})


userSchema.pre('save', async function(next){
    console.log("Hi from inside");
    if(this.isModified('password')){
        const x = await bcrypt.hash(this.password, 12);
        this.password  = x;
    }
    next();
})

userSchema.methods.generateAuthToken = async function(){
    try{
        let token = jwt.sign({_id: this._id}, process.env.SECRET_KEY);
        this.tokens = this.tokens.concat({token:token});
        await this.save();
        return token;
    }
    catch(err){

    }
}

const User = mongoose.model('USER', userSchema);

module.exports = User;